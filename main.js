"use strict";

const btn = document.querySelector(".btn-country");
const countriesContainer = document.querySelector(".countries");

///////////////////////////////////////

const request1 = new XMLHttpRequest();
request1.open("GET", "https://meowfacts.herokuapp.com/?count=3");
request1.send();

request1.addEventListener("load", function () {
  const data = JSON.parse(request1.responseText);
  console.log(data);
  const [text1, text2, text3] = data.data;
  console.log(text1);
  console.log(text2);
  console.log(text3);
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ + —Ä–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
// function getCountryData(country) {
//   const request = new XMLHttpRequest();
//   request.open("GET", `https://restcountries.com/v3.1/name/${country}`);
//   request.send();

//   // –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML –∫–æ–¥–µ
//   function renderCards(data, className = "") {
//     const html = `<article class="country ${className}">
//       <img class="country__img" src="${data.flags.svg}" />
//       <div class="country__data">
//         <h3 class="country__name">${data.name.common}</h3>
//         <h4 class="country__region">${data.region}</h4>
//         <p class="country__row"><span>üë´</span>${data.population}</p>
//         <p class="country__row"><span>üó£Ô∏è</span>${
//           Object.entries(data.languages)[0][1]
//         }</p>
//         <p class="country__row"><span>üí∞</span>${
//           Object.entries(Object.entries(data.currencies)[0][1])[0][1]
//         }</p>
//       </div>
//     </article>`;

//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
//     countriesContainer.insertAdjacentHTML("beforeend", html);
//     countriesContainer.style.opacity = 1;
//   }

//   // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –∏—Ö –∑–∞–≥—Ä—É–∑–∫–∏
//   request.addEventListener("load", function () {
//     const [data] = JSON.parse(this.responseText);

//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–æ–π
//     renderCards(data);
//     const neighbor = data.borders[0];
//     console.log(neighbor);

//     // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–≤–æ–π call-back —Ñ—É–Ω–∫—Ü–∏–∏
//     const request2 = new XMLHttpRequest();
//     request2.open("GET", `https://restcountries.com/v3.1/alpha/${neighbor}`);
//     request2.send();
//     request2.addEventListener("load", function () {
//       const [data2] = JSON.parse(this.responseText);

//       // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å—Ç—Ä–∞–Ω—ã —Å–æ—Å–µ–¥–∞
//       renderCards(data2, "neighbour");
//     });
//   });
// }

// getCountryData("russia");

function renderCards(data, className = "") {
  const html = `<article class="country ${className}">
      <img class="country__img" src="${data.flags.svg}" />
      <div class="country__data">
        <h3 class="country__name">${data.name.common}</h3>
        <h4 class="country__region">${data.region}</h4>
        <p class="country__row"><span>üë´</span>${data.population}</p>
        <p class="country__row"><span>üó£Ô∏è</span>${
          Object.entries(data.languages)[0][1]
        }</p>
        <p class="country__row"><span>üí∞</span>${
          Object.entries(Object.entries(data.currencies)[0][1])[0][1]
        }</p>
      </div>
    </article>`;

  // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
  countriesContainer.insertAdjacentHTML("beforeend", html);
}

// function getCountryData(country) {
//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`)
//     .then(function (response) {
//       console.log(response);
//       return response.json();
//     })
//     .then(function (data) {
//       console.log(data);
//       renderCards(data[0]);
//     });
//   console.log(request);
// }
// getCountryData("russia");

// function getCountryData(country) {
//   // –°—Ç—Ä–∞–Ω–∞1
//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`)
//     .then((response) => response.json())
//     .then((data) => {
//       renderCards(data[0]);
//       const neighbor = data[0].borders[0];
//       console.log(neighbor);

//       // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
//       return fetch(`https://restcountries.com/v3.1/alpha/${neighbor}`)
//         .then(function (response) {
//           return response.json();
//         })
//         .then(function (data) {
//           const [res] = data;
//           console.log(data); // –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É —Å–æ—Å–µ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –º–∞—Å—Å–∏–≤–∞
//           console.log(res); // –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É —Å–æ—Å–µ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ–±—ä–µ–∫—Ç–∞
//           renderCards(res, "neighbour");
//         });
//     });
//   console.log(request);
// }
// getCountryData("usa");

function renderError(message) {
  countriesContainer.insertAdjacentText("beforeend", message);
}

/// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`);
//   console.log(request);
//   request
//     .then((response) => {
//       console.log(request);
//       console.log(response);

//       if (!response.ok) {
//         throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ${response.status}`);
//       }
//       return response.json();
//     })
//     .then((data) => {
//       renderCards(data[0]);
//       // const neighbor = data[0].borders[0];
//       const neighbor = "asdaqs";

//       // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
//       return fetch(`https://restcountries.com/v3.1/alpha/${neighbor}`)
//         .then((response) => {
//           if (!response.ok) {
//             throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ${response.status}`);
//           }
//           return response.json();
//         })
//         .then((data) => {
//           const [res] = data;
//           renderCards(res, "neighbour");
//         });
//     })
//     .catch((err) =>
//       renderError(
//         `–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –∑–∞–π–¥–∏—Ç–µ –ø–æ–∑–∂–µ`
//       )
//     )
//     .finally(() => (countriesContainer.style.opacity = 1));
// }

// btn.addEventListener("click", function () {
//   getCountryData("usa");
// });

//
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é

// function getCountryData(country) {
//   // –°—Ç—Ä–∞–Ω–∞1

//   function getJSON(url, errorMsg = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.") {
//     return fetch(url).then(function (response) {
//       if (!response.ok) {
//         throw new Error(`${errorMsg}(${response.status})`);
//       }
//       return response.json();
//     });
//   }

//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`);

//   getJSON(`https://restcountries.com/v3.1/name/${country}`, "–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
//     .then((data) => {
//       renderCards(data[0]);
//       const neighbor = data[0].borders;
//       // const neighbor = "dfsfssgdsd";
//       if (!neighbor) {
//         throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ—Å–µ–¥–µ–π");
//       }
//       // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
//       return getJSON(
//         `https://restcountries.com/v3.1/alpha/${neighbor}`,
//         "–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
//       ).then((data) => {
//         const [res] = data;
//         renderCards(res, "neighbour");
//       });
//     })
//     .catch((err) => renderError(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}.`))
//     .finally(() => (countriesContainer.style.opacity = 1));
// }

// btn.addEventListener("click", function () {
//   getCountryData("australia");
// });

/* 
todo 13-9 –ü—Ä–∞–∫—Ç–∏–∫–∞, –ø–æ—è–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç–æ—á–∫–∏ –∏—Å—Ö–æ–¥—è –∏–∑ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è
–° –ø–æ–º–æ—â—å—é —Å—Ç–æ—Ä–æ–Ω–Ω–µ–≥–æ API –ø–æ–ª—É—á–∞–ª–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —Å—Ç—Ä–∞–Ω—ã –∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–ª–∏ –≤ API, –∫–æ—Ç–æ—Ä—ã–π —Ä–µ–Ω–¥–µ—Ä–∏—Ç –∫–∞—Ä—Ç–æ—á–∫—É
–≠—Ç–æ —ç–º—É–ª—è—Ü–∏—è —Ç–æ–π –∑–∞–¥–∞—á–∏, –∫–æ—Ç–æ—Ä—É—é –¥–∞–¥—É—Ç –Ω–∞ —Ä–∞–±–æ—Ç–µ
–ü–æ–¥—Å–∫–∞–∑–∫–∏:
1) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å API, –≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–π –≤ –±—Ä–∞—É–∑–µ—Ä, –æ–∫–æ—à–∫–æ, –∫–æ—Ç–æ—Ä–æ–µ –¥–∞–µ—Ç —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –º–æ–µ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏. –°–∫–æ–ø–∏—Ä–æ–≤–∞—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã, –≤—Å—Ç–∞–≤–∏—Ç—å –≤ –¥—Ä—É–≥–æ–π API, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª–∏—Ç —Å—Ç—Ä–∞–Ω—É, –∞ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –≤—Å—Ç–∞–≤–∏—Ç—å –≤ –Ω–∞—à –≤—ã—à–µ –Ω–∞–ø–∏—Å–∞–Ω–Ω—ã–π –∫–æ–¥
–î–æ–ø—É—Å—Ç–∏–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã —è –ø–æ–ª—É—á—É, –Ω–æ –≤–æ—Ç –∫–∞–∫ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Å—Ç—Ä–∞–Ω—É –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º?! –û—Ç–≤–µ—Ç–∞ –Ω–µ—Ç, –∏–¥–µ–º –≤ –≥—É–≥–ª
https://geocode.xyz/api
–¢–∞–º –µ—Å—Ç—å —Å—Ç—Ä–æ–∫–∞ Reverse Geocoding
curl 'https://geocode.xyz/51.50354,-0.12768?geoit=xml&auth=your_api_key'
–ù–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ https, –ø—Ä–∏—á–µ–º –Ω—É–∂–µ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç. –ó–¥–µ—Å—å –Ω–∞–ø–∏—Å–∞–Ω–æ, —á—Ç–æ —Ñ–æ—Ä–º–∞—Ç XML. –ü–æ–º–µ–Ω—è–µ–º –Ω–∞ JSON.
–ù–æ —á—Ç–æ –ø–æ—Å–ª–µ xml - –∑–∞–ø—Ä–æ—Å –∏ –∫–∞–∫–æ–π-—Ç–æ api_key
api_key —ç—Ç–æ –∫–ª—é—á, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (–∏ –æ–ø–ª–∞—Ç—ã —Å–µ—Ä–≤–∏—Å–∞), –∫–æ—Ç–æ—Ä—ã–π –∫–∞–∫ —Ä–∞–∑ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è –ø–æ—Å–ª–µ auth=. –í –±–µ—Å–ø–ª–∞—Ç–Ω–æ–π –≤–µ—Ä—Å–∏–∏ —Å—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∑–∞–ø—Ä–æ—Å 1 —Ä–∞–∑ –≤ —Å–µ–∫. –í –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö - 10 —Ä–∞–∑ –≤ —Å–µ–∫. –ï—Å–ª–∏ –æ–ø–ª–∞—Ç–∏—Ç—å - –±–æ–ª—å—à–µ. 1 –∫–ª–∏–∫ —Å–∫–æ–ª—å–∫–æ-—Ç–æ —Å—Ç–æ–∏—Ç
'https://geocode.xyz/51.50354,-0.12768?geoit=json&auth=421447806752157919442x96444'
*/

// –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã. –°—á–∏—Ç–∞–π –ø–æ-–Ω–æ–≤–æ–π –≤—Å–µ –Ω–∞–ø–∏—Å–∞–ª–∏, —Ç–æ–ª—å–∫–æ –±–µ–∑ –∫–Ω–æ–ø–∫–∏
if (navigator.geolocation) {
  navigator.geolocation.getCurrentPosition(
    function (position) {
      console.log(position);
      const { latitude } = position.coords;
      const { longitude } = position.coords;
      console.log(latitude, longitude); // 51.0966193 71.4245694
      console.log(`https://www.google.com/maps/@${latitude},${longitude}`); // https://www.google.com/maps/@51.0966193,71.4245694

      // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
      fetch(
        `https://geocode.xyz/${latitude},${longitude}?geoit=json&auth=421447806752157919442x96444`
      )
        .then(function (response) {
          if (!response.ok) {
            throw new Error(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. (${response.status})`);
          }
          return response.json();
        })
        .then((result) => {
          const country = result.country;
          // –ß—Ç–æ–±—ã –≤—Å—Ç–∞–≤–∏—Ç—å –≤ API –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, —Å–¥–µ–ª–∞–µ–º –≤–µ—Ä–Ω–µ–º –Ω–æ–≤—ã–π fetch –∑–∞–ø—Ä–æ—Å –æ —Å—Ç—Ä–∞–Ω–µ
          return fetch(`https://restcountries.com/v3.1/name/${country}`);
        }) // –∑–¥–µ—Å—å –ø—Ä–æ–¥–æ–ª–∂–∏–º —ç—Ç–æ—Ç fetch —á–µ—Ä–µ–∑ then
        .then((response) => response.json())
        .then((data) => {
          console.log(data);
          renderCards(data[0]);
        })
        .catch((err) =>
          renderError(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}.`)
        )
        .finally(() => (countriesContainer.style.opacity = 1));
    },
    function () {
      alert("–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–π –ª–æ–∫–∞—Ü–∏–∏");
    }
  );
}
