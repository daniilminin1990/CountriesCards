"use strict";

const btn = document.querySelector(".btn-country");
const countriesContainer = document.querySelector(".countries");

///////////////////////////////////////

const request1 = new XMLHttpRequest();
request1.open("GET", "https://meowfacts.herokuapp.com/?count=3");
request1.send();

request1.addEventListener("load", function () {
  const data = JSON.parse(request1.responseText);
  console.log(data);
  const [text1, text2, text3] = data.data;
  console.log(text1);
  console.log(text2);
  console.log(text3);
});

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ + —Ä–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
// function getCountryData(country) {
//   const request = new XMLHttpRequest();
//   request.open("GET", `https://restcountries.com/v3.1/name/${country}`);
//   request.send();

//   // –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML –∫–æ–¥–µ
//   function renderCards(data, className = "") {
//     const html = `<article class="country ${className}">
//       <img class="country__img" src="${data.flags.svg}" />
//       <div class="country__data">
//         <h3 class="country__name">${data.name.common}</h3>
//         <h4 class="country__region">${data.region}</h4>
//         <p class="country__row"><span>üë´</span>${data.population}</p>
//         <p class="country__row"><span>üó£Ô∏è</span>${
//           Object.entries(data.languages)[0][1]
//         }</p>
//         <p class="country__row"><span>üí∞</span>${
//           Object.entries(Object.entries(data.currencies)[0][1])[0][1]
//         }</p>
//       </div>
//     </article>`;

//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
//     countriesContainer.insertAdjacentHTML("beforeend", html);
//     countriesContainer.style.opacity = 1;
//   }

//   // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –∏—Ö –∑–∞–≥—Ä—É–∑–∫–∏
//   request.addEventListener("load", function () {
//     const [data] = JSON.parse(this.responseText);

//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–æ–π
//     renderCards(data);
//     const neighbor = data.borders[0];
//     console.log(neighbor);

//     // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–≤–æ–π call-back —Ñ—É–Ω–∫—Ü–∏–∏
//     const request2 = new XMLHttpRequest();
//     request2.open("GET", `https://restcountries.com/v3.1/alpha/${neighbor}`);
//     request2.send();
//     request2.addEventListener("load", function () {
//       const [data2] = JSON.parse(this.responseText);

//       // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å—Ç—Ä–∞–Ω—ã —Å–æ—Å–µ–¥–∞
//       renderCards(data2, "neighbour");
//     });
//   });
// }

// getCountryData("russia");

function renderCards(data, className = "") {
  const html = `<article class="country ${className}">
      <img class="country__img" src="${data.flags.svg}" />
      <div class="country__data">
        <h3 class="country__name">${data.name.common}</h3>
        <h4 class="country__region">${data.region}</h4>
        <p class="country__row"><span>üë´</span>${data.population}</p>
        <p class="country__row"><span>üó£Ô∏è</span>${
          Object.entries(data.languages)[0][1]
        }</p>
        <p class="country__row"><span>üí∞</span>${
          Object.entries(Object.entries(data.currencies)[0][1])[0][1]
        }</p>
      </div>
    </article>`;

  // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
  countriesContainer.insertAdjacentHTML("beforeend", html);
}

// function getCountryData(country) {
//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`)
//     .then(function (response) {
//       console.log(response);
//       return response.json();
//     })
//     .then(function (data) {
//       console.log(data);
//       renderCards(data[0]);
//     });
//   console.log(request);
// }
// getCountryData("russia");

// function getCountryData(country) {
//   // –°—Ç—Ä–∞–Ω–∞1
//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`)
//     .then((response) => response.json())
//     .then((data) => {
//       renderCards(data[0]);
//       const neighbor = data[0].borders[0];
//       console.log(neighbor);

//       // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
//       return fetch(`https://restcountries.com/v3.1/alpha/${neighbor}`)
//         .then(function (response) {
//           return response.json();
//         })
//         .then(function (data) {
//           const [res] = data;
//           console.log(data); // –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É —Å–æ—Å–µ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –º–∞—Å—Å–∏–≤–∞
//           console.log(res); // –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É —Å–æ—Å–µ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ–±—ä–µ–∫—Ç–∞
//           renderCards(res, "neighbour");
//         });
//     });
//   console.log(request);
// }
// getCountryData("usa");

function renderError(message) {
  countriesContainer.insertAdjacentText("beforeend", message);
}

/// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`);
//   console.log(request);
//   request
//     .then((response) => {
//       console.log(request);
//       console.log(response);

//       if (!response.ok) {
//         throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ${response.status}`);
//       }
//       return response.json();
//     })
//     .then((data) => {
//       renderCards(data[0]);
//       // const neighbor = data[0].borders[0];
//       const neighbor = "asdaqs";

//       // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
//       return fetch(`https://restcountries.com/v3.1/alpha/${neighbor}`)
//         .then((response) => {
//           if (!response.ok) {
//             throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ${response.status}`);
//           }
//           return response.json();
//         })
//         .then((data) => {
//           const [res] = data;
//           renderCards(res, "neighbour");
//         });
//     })
//     .catch((err) =>
//       renderError(
//         `–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –∑–∞–π–¥–∏—Ç–µ –ø–æ–∑–∂–µ`
//       )
//     )
//     .finally(() => (countriesContainer.style.opacity = 1));
// }

// btn.addEventListener("click", function () {
//   getCountryData("usa");
// });

//
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é

function getCountryData(country) {
  // –°—Ç—Ä–∞–Ω–∞1

  function getJSON(url, errorMsg = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.") {
    return fetch(url).then(function (response) {
      if (!response.ok) {
        throw new Error(`${errorMsg}(${response.status})`);
      }
      return response.json();
    });
  }

  const request = fetch(`https://restcountries.com/v3.1/name/${country}`);

  getJSON(`https://restcountries.com/v3.1/name/${country}`, "–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    .then((data) => {
      renderCards(data[0]);
      const neighbor = data[0].borders;
      // const neighbor = "dfsfssgdsd";
      if (!neighbor) {
        throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ—Å–µ–¥–µ–π");
      }
      // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
      return getJSON(
        `https://restcountries.com/v3.1/alpha/${neighbor}`,
        "–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
      ).then((data) => {
        const [res] = data;
        renderCards(res, "neighbour");
      });
    })
    .catch((err) => renderError(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}.`))
    .finally(() => (countriesContainer.style.opacity = 1));
}

btn.addEventListener("click", function () {
  getCountryData("australia");
});

/* 
todo 13-10 –ß—Ç–æ —Ç–∞–∫–æ–µ –ø—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—è
—Å–æ–∑–¥–∞–¥–∏–º –æ—Ç–¥–µ–ª—å–Ω–æ —Å–≤–æ–π –ø—Ä–æ–º–∏—Å
–†–∞–±–æ—Ç–∞–µ—Ç —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ.
–ß—Ç–æ–±—ã —Å–∏–º—É–ª–∏—Ä–æ–≤–∞—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç—å, —Å–¥–µ–ª–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
–í —Ç–∞–∫–æ–º —Å–ª—É—á–∞–µ –≤ Promise –±—É–¥–µ—Ç <pending>, –∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –Ω–µ –±—É–¥–µ—Ç. –ï—Å–ª–∏ —Ä–∞—Å–∫—Ä–æ–µ–º –µ–≥–æ, —Ç–æ –æ–Ω –±—É–¥–µ—Ç —Å —ç—Ç–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–º –ø–æ—Å—Ç–æ—è–Ω–Ω–æ. –ù–æ –µ—Å–ª–∏ –Ω–∞–∂–º–µ–º –Ω–∞ –Ω–µ–≥–æ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã, —Ç–æ —Ä–µ–∑—É–ª—å–∞—Ç –∏–∑–º–µ–Ω–∏—Ç—Å—è 
–¢.–µ. –≤ –Ω–∞—á–∞–ª–µ, –ø–æ–∫–∞ –Ω–µ –ø–æ–ª—É—á–∏–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –ø—Ä–æ–º–∏—Å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ undefined, –æ–Ω –¥–æ–∂–∏–¥–∞–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
–ò–º–µ–Ω–Ω–æ –ø–æ—ç—Ç–æ–º—É –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ then –¥–ª—è –Ω–∞—à–µ–≥–æ –ø—Ä–æ–º–∏—Å–∞. –ò LotteryTicket —Å—Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç resolve –∏–ª–∏ reject
–î–æ–ø–æ–ª–Ω–∏–º –∫–æ–¥ 
lotteryTicket.then(function (res) {
  console.log(res);
});
–ü—Ä–∏ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª–∏ —á–µ—Ä–µ–∑ 2 —Å–µ–∫ –ø–æ—è–≤–∏—Ç—Å—è win, –∏ PromiseState = fulfilled
–ê –µ—Å–ª–∏ –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π, —Ç–æ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞, lose –Ω–µ –ø–æ—è–≤–∏—Ç—Å—è, –∞ –≤ PromiseState = rejected.

–î–ª—è —ç—Ç–æ–≥–æ –∏ –Ω—É–∂–µ–Ω catch - –≤—ã–ª–∞–≤–ª–∏–≤–∞—Ç—å –æ—à–∏–±–∫–∏
–ü–æ—Å–ª–µ catch –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏, –¥–∞–∂–µ –µ—Å–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç

–ü—Ä–æ–º–∏—Å—ã –ø–æ–∑–≤–æ–ª—è—é—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –æ—Ç–ª–æ–∂–µ–Ω–Ω—ã–º –∫–æ–¥–æ–º, –Ω–µ –∑–∞—Å—Ç–∞–≤–ª—è—è –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å—Å—è –¥—Ä—É–≥–æ–π –∫–æ–¥
–£ –ø—Ä–æ–º–∏—Å–æ–≤ –µ—Å—Ç—å –∫–æ–ª–±—ç–∫ —Ñ—É–Ω–∫—Ü–∏—è —Å 2 –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏(2 —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ –∏—Ç–æ–≥—É):
1) –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞
2) –Ω–µ–≥–∞—Ç–∏–≤–Ω—ã–π
–í —Å–ª—É—á–∞–µ —Å —Å–µ—Ä–≤–µ—Ä–æ–º –ø–µ—Ä–≤—ã–π then - —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω–æ–º –Ω–∞–º —Ñ–æ—Ä–º–∞—Ç–µ, –≤–µ—Ä–Ω—É—Ç—å –∏—Ö –∫–∞–∫ –Ω–æ–≤—ã–π –ø—Ä–æ–º–∏—Å
–° –ø–æ–º–æ—â—å—é –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ then - –ø–æ–ª—É—á–∞–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —ç—Ç–∏—Ö –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
Catch - –æ—Ç–ª–∞–≤–ª–∏–≤–∞–µ–º —ç—Ç—É –æ—à–∏–±–∫—É

* –ü—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—è - –ø—Ä–µ–≤—Ä–∞—â–µ–Ω–∏–µ –∫–æ–¥–∞, –∫–æ—Ç–æ—Ä—ã–π –æ—Å–Ω–æ–≤–∞–Ω –Ω–∞ –∫–æ–ª–±—ç–∫–∞—Ö, –≤ –±–æ–ª–µ–µ —É–¥–æ–±–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É 

–ù–∞–ø—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–¥–∏–º callBack HELL, —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å
–ù–∞–ø—Ä–∏–º–µ—Ä setTimeout –Ω–∞ 6 —Å–µ–∫

setTimeout(function () {
  console.log("–ü—Ä–æ—à–ª–∞ 1 —Å–µ–∫");
  setTimeout(() => {
    console.log("–ü—Ä–æ—à–ª–æ 2 —Å–µ–∫");
    setTimeout(() => {
      console.log("–ü—Ä–æ—à–ª–æ 3 —Å–µ–∫");
      setTimeout(() => {
        console.log("–ü—Ä–æ—à–ª–æ 4 —Å–µ–∫");
        setTimeout(() => {
          console.log("–ü—Ä–æ—à–ª–æ 5 —Å–µ–∫");
          setTimeout(() => {
            console.log("–ü—Ä–æ—à–ª–æ 6 —Å–µ–∫");
          }, 1000);
        }, 1000);
      }, 1000);
    }, 1000);
  }, 1000);
}, 1000);

–î–ª—è —É–ø—Ä–æ—â–µ–Ω–∏—è, —Ç.–µ. –¥–ª—è –ø—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏, —Å–æ–∑–¥–∞–¥–∏–º —Ñ—É–Ω–∫—Ü–∏—é function wait(seconds){}

function wait(seconds) {
  return new Promise(function (resolve, reject) {
    setTimeout(resolve, seconds * 1000);
  });
}

wait(2)
  .then(function () {
    console.log("–í—ã –∂–¥–∞–ª–∏ 2 —Å–µ–∫");
    return wait(1);
  })
  .then(function () {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  })
  .then(() => {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  })

–¢–µ–º —Å–∞–º—ã–º –º—ã –ø–æ–ª—É—á–∞–µ–º —Ä–æ–≤–Ω—É—é –ø—Ä–æ—Å—Ç—ã–Ω—é
*/

const lotteryTicket = new Promise(function (resolve, reject) {
  setTimeout(() => {
    if (Math.random() >= 0.5) {
      resolve("win");
    } else {
      reject("lose");
    }
  }, 2000);
});

lotteryTicket
  .then(function (res) {
    console.log(lotteryTicket);
    console.log(res);
  })
  .catch(function (err) {
    console.error(err);
  });

console.log(lotteryTicket); // Promise¬†{<rejected>: 'lose'} \n Uncaught (in promise) lose

setTimeout(function () {
  console.log("–ü—Ä–æ—à–ª–∞ 1 —Å–µ–∫");
  setTimeout(() => {
    console.log("–ü—Ä–æ—à–ª–æ 2 —Å–µ–∫");
    setTimeout(() => {
      console.log("–ü—Ä–æ—à–ª–æ 3 —Å–µ–∫");
      setTimeout(() => {
        console.log("–ü—Ä–æ—à–ª–æ 4 —Å–µ–∫");
        setTimeout(() => {
          console.log("–ü—Ä–æ—à–ª–æ 5 —Å–µ–∫");
          setTimeout(() => {
            console.log("–ü—Ä–æ—à–ª–æ 6 —Å–µ–∫");
          }, 1000);
        }, 1000);
      }, 1000);
    }, 1000);
  }, 1000);
}, 1000);

function wait(seconds) {
  return new Promise(function (resolve, reject) {
    setTimeout(resolve, seconds * 1000);
  });
}

wait(2)
  .then(function () {
    console.log("–í—ã –∂–¥–∞–ª–∏ 2 —Å–µ–∫");
    return wait(1);
  })
  .then(function () {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  })
  .then(() => {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  })
  .then(() => {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  })
  .then(() => {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  })
  .then(() => {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  })
  .then(() => {
    console.log("–í—ã –∂–¥–∞–ª–∏ –µ—â–µ 1 —Å–µ–∫");
    return wait(1);
  });
