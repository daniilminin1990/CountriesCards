"use strict";

const btn = document.querySelector(".btn-country");
const countriesContainer = document.querySelector(".countries");

///////////////////////////////////////

// const request1 = new XMLHttpRequest();
// request1.open("GET", "https://meowfacts.herokuapp.com/?count=3");
// request1.send();

// request1.addEventListener("load", function () {
//   const data = JSON.parse(request1.responseText);
//   console.log(data);
//   const [text1, text2, text3] = data.data;
//   console.log(text1);
//   console.log(text2);
//   console.log(text3);
// });

// –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—Ä–æ—Å–∞ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω —Å–æ–∑–¥–∞–µ—Ç –∫–∞—Ä—Ç–æ—á–∫–∏ + —Ä–µ–Ω–¥–µ—Ä –∫–∞—Ä—Ç–æ—á–∫–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
// function getCountryData(country) {
//   const request = new XMLHttpRequest();
//   request.open("GET", `https://restcountries.com/v3.1/name/${country}`);
//   request.send();

//   // –§—É–Ω–∫—Ü–∏—è –∏—Å–ø–æ–ª—å–∑—É–µ—Ç –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ HTML –∫–æ–¥–µ
//   function renderCards(data, className = "") {
//     const html = `<article class="country ${className}">
//       <img class="country__img" src="${data.flags.svg}" />
//       <div class="country__data">
//         <h3 class="country__name">${data.name.common}</h3>
//         <h4 class="country__region">${data.region}</h4>
//         <p class="country__row"><span>üë´</span>${data.population}</p>
//         <p class="country__row"><span>üó£Ô∏è</span>${
//           Object.entries(data.languages)[0][1]
//         }</p>
//         <p class="country__row"><span>üí∞</span>${
//           Object.entries(Object.entries(data.currencies)[0][1])[0][1]
//         }</p>
//       </div>
//     </article>`;

//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
//     countriesContainer.insertAdjacentHTML("beforeend", html);
//     countriesContainer.style.opacity = 1;
//   }

//   // –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ—Å–ª–µ –∏—Ö –∑–∞–≥—Ä—É–∑–∫–∏
//   request.addEventListener("load", function () {
//     const [data] = JSON.parse(this.responseText);

//     // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–∞–Ω–æ–π
//     renderCards(data);
//     const neighbor = data.borders[0];
//     console.log(neighbor);

//     // –°–æ–∑–¥–∞–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É –≤–Ω—É—Ç—Ä–∏ –ø–µ—Ä–≤–æ–π call-back —Ñ—É–Ω–∫—Ü–∏–∏
//     const request2 = new XMLHttpRequest();
//     request2.open("GET", `https://restcountries.com/v3.1/alpha/${neighbor}`);
//     request2.send();
//     request2.addEventListener("load", function () {
//       const [data2] = JSON.parse(this.responseText);

//       // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É —Å—Ç—Ä–∞–Ω—ã —Å–æ—Å–µ–¥–∞
//       renderCards(data2, "neighbour");
//     });
//   });
// }

// getCountryData("russia");

function renderCards(data, className = "") {
  const html = `<article class="country ${className}">
      <img class="country__img" src="${data.flags.svg}" />
      <div class="country__data">
        <h3 class="country__name">${data.name.common}</h3>
        <h4 class="country__region">${data.region}</h4>
        <p class="country__row"><span>üë´</span>${data.population}</p>
        <p class="country__row"><span>üó£Ô∏è</span>${
          Object.entries(data.languages)[0][1]
        }</p>
        <p class="country__row"><span>üí∞</span>${
          Object.entries(Object.entries(data.currencies)[0][1])[0][1]
        }</p>
      </div>
    </article>`;

  // –í—ã–≤–æ–¥–∏–º –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É –∫–∞—Ä—Ç–æ—á–∫—É –∏ —É–±–∏—Ä–∞–µ–º –Ω—É–ª–µ–≤—É—é –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å
  countriesContainer.insertAdjacentHTML("beforeend", html);
}

// function getCountryData(country) {
//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`)
//     .then(function (response) {
//       console.log(response);
//       return response.json();
//     })
//     .then(function (data) {
//       console.log(data);
//       renderCards(data[0]);
//     });
//   console.log(request);
// }
// getCountryData("russia");

// function getCountryData(country) {
//   // –°—Ç—Ä–∞–Ω–∞1
//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`)
//     .then((response) => response.json())
//     .then((data) => {
//       renderCards(data[0]);
//       const neighbor = data[0].borders[0];
//       console.log(neighbor);

//       // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
//       return fetch(`https://restcountries.com/v3.1/alpha/${neighbor}`)
//         .then(function (response) {
//           return response.json();
//         })
//         .then(function (data) {
//           const [res] = data;
//           console.log(data); // –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É —Å–æ—Å–µ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –º–∞—Å—Å–∏–≤–∞
//           console.log(res); // –ø–æ–ª—É—á–∏–ª–∏ —Å—Ç—Ä–∞–Ω—É —Å–æ—Å–µ–¥–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –æ–±—ä–µ–∫—Ç–∞
//           renderCards(res, "neighbour");
//         });
//     });
//   console.log(request);
// }
// getCountryData("usa");

function renderError(message) {
  countriesContainer.insertAdjacentText("beforeend", message);
}

/// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫

//   const request = fetch(`https://restcountries.com/v3.1/name/${country}`);
//   console.log(request);
//   request
//     .then((response) => {
//       console.log(request);
//       console.log(response);

//       if (!response.ok) {
//         throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ${response.status}`);
//       }
//       return response.json();
//     })
//     .then((data) => {
//       renderCards(data[0]);
//       // const neighbor = data[0].borders[0];
//       const neighbor = "asdaqs";

//       // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
//       return fetch(`https://restcountries.com/v3.1/alpha/${neighbor}`)
//         .then((response) => {
//           if (!response.ok) {
//             throw new Error(`–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ ${response.status}`);
//           }
//           return response.json();
//         })
//         .then((data) => {
//           const [res] = data;
//           renderCards(res, "neighbour");
//         });
//     })
//     .catch((err) =>
//       renderError(
//         `–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏–ª–∏ –∑–∞–π–¥–∏—Ç–µ –ø–æ–∑–∂–µ`
//       )
//     )
//     .finally(() => (countriesContainer.style.opacity = 1));
// }

// btn.addEventListener("click", function () {
//   getCountryData("usa");
// });

//
// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ —á–µ—Ä–µ–∑ –≤–Ω–µ—à–Ω—é—é —Ñ—É–Ω–∫—Ü–∏—é

function getCountryData(country) {
  // –°—Ç—Ä–∞–Ω–∞1

  function getJSON(url, errorMsg = "–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫.") {
    return fetch(url).then(function (response) {
      if (!response.ok) {
        throw new Error(`${errorMsg}(${response.status})`);
      }
      return response.json();
    });
  }

  const request = fetch(`https://restcountries.com/v3.1/name/${country}`);

  getJSON(`https://restcountries.com/v3.1/name/${country}`, "–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    .then((data) => {
      renderCards(data[0]);
      const neighbor = data[0].borders;
      // const neighbor = "dfsfssgdsd";
      if (!neighbor) {
        throw new Error("–ù–µ –Ω–∞–π–¥–µ–Ω–æ —Å–æ—Å–µ–¥–µ–π");
      }
      // –°—Ç—Ä–∞–Ω–∞ —Å–æ—Å–µ–¥
      return getJSON(
        `https://restcountries.com/v3.1/alpha/${neighbor}`,
        "–°—Ç—Ä–∞–Ω–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
      ).then((data) => {
        const [res] = data;
        renderCards(res, "neighbour");
      });
    })
    .catch((err) => renderError(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}.`))
    .finally(() => (countriesContainer.style.opacity = 1));
}

// btn.addEventListener("click", function () {
//   getCountryData("australia");
// });

/* 
todo 13-12 –ü—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—è —á–∞—Å—Ç—å 2
–ò–∑–±–∞–≤–∏–º—Å—è –æ—Ç navigator API –≤ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –ø—Ä–æ–º–∏—Å–æ–≤ –∏ –∏–∑–±–∞–≤–∏–º—Å—è –æ—Ç callback–æ–≤ –≤ callback–∞—Ö
*/
// navigator.geolocation.getCurrentPosition(
//   function (position) {
//     const { latitude } = position.coords;
//     const { longitude } = position.coords;
//     // –ò—Å–ø–æ–ª—å–∑—É–µ–º API –¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏
//     fetch(
//       `https://geocode.xyz/${latitude},${longitude}?geoit=json&auth=421447806752157919442x96444`
//     )
//       .then(function (response) {
//         if (!response.ok) {
//           throw new Error(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫. (${response.status})`);
//         }
//         return response.json();
//       })
//       .then((result) => {
//         const country = result.country;
//         // –ß—Ç–æ–±—ã –≤—Å—Ç–∞–≤–∏—Ç—å –≤ API –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å—Ç—Ä–∞–Ω—ã, —Å–¥–µ–ª–∞–µ–º –≤–µ—Ä–Ω–µ–º –Ω–æ–≤—ã–π fetch –∑–∞–ø—Ä–æ—Å –æ —Å—Ç—Ä–∞–Ω–µ
//         return fetch(`https://restcountries.com/v3.1/name/${country}`);
//       })
//       .then((response) => response.json())
//       .then((data) => {
//         console.log(data);
//         renderCards(data[0]);
//       })
//       .catch((err) => renderError(`–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫ –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏: ${err}.`))
//       .finally(() => (countriesContainer.style.opacity = 1));
//   },
//   function () {
//     alert("–í—ã –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–æ—Å—Ç—É–ø –∫ —Å–≤–æ–µ–π –ª–æ–∫–∞—Ü–∏–∏");
//   }
// );

// –ü–µ—Ä–µ–ø–∏—à–µ–º —ç—Ç–æ—Ç –∫–æ–¥, –∏—Å–ø–æ–ª—å–∑—É—è –ø—Ä–æ–º–∏—Å–∏—Ñ–∏–∫–∞—Ü–∏—é
new Promise(function (resolve, reject) {
  // navigator.geolocation.getCurrentPosition(
  //   function (position) {
  //     resolve(position);
  //   },
  //   function (err) {
  //     reject(err);
  //   }
  // );
  navigator.geolocation.getCurrentPosition(resolve, reject); // –¢.–µ. –≥–æ–≤–æ—Ä–∏–º –ø—Ä–æ–º–∏—Å—É - –∑–∞–ø–∏—à–∏ –≤ result —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è getCurrentPosition, –∞ –≤ reject –ø—Ä–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω–æ–º
})
  // –¢–∞–∫ —Å–æ–∑–¥–∞–ª–∏ –ø—Ä–æ–º–∏—Å. –¢–µ–ø–µ—Ä—å –æ–±—Ä–∞—Ç–∏–º—Å—è –∫ pos + –∏—Å–ø–æ–ª—å–∑—É–µ–º then
  .then(function (data) {
    // –í data –±—É–¥—É—Ç –ª–µ–∂–∞—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ç–∏–≤–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞
    console.log(data);
    // –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å –∫–∞–∫–∏–µ-—Ç –æ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥—Ä—É–≥–æ–≥–æ API, –º–æ–∂–µ–º –¥–∞–ª—å—à–µ return ... ).then –∏ –ø–æ—à–ª–∞ –≤–æ–∑–Ω—è
  });

// * Async/Await
async function getCountry(country) {
  try {
    const res = await fetch(`https://restcountries.com/v3.1/name/${country}`);
    if (!res.ok) {
      throw new Error("–£ –≤–∞—Å –Ω–µ—Ç –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–∞");
    }
    const data = await res.json();

    return `–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ ${data[0].name.common}`;
  } catch (err) {
    throw new Error("–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫");
  }
}
// getCountry("usa");

btn.addEventListener("click", function () {
  getCountry("usa");
});

const cont = getCountry("usa");
console.log(cont);

// –í–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ .then.catch
getCountry("usa")
  .then(function (response) {
    console.log(response);
  })
  .catch(function (err) {
    console.log(err);
  });

// –í–æ–∑–≤—Ä–∞—Ç –¥–∞–Ω–Ω—ã—Ö —Å –ø–æ–º–æ—â—å—é async/awiat
(async function () {
  try {
    const city = await getCountry("usa");
    console.log(city);
  } catch (err) {
    console.log(err);
  }
})();

/* 
todo 13-16 –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ promises
–ú–ï–¢–û–î –¥–ª—è Promise.ALL
–ü–æ–∑–≤–æ–ª—è–µ—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ
–î–ª—è —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ–≥–¥–∞ –∑–∞–ø—É—Å—Ç–∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ promise, –Ω–æ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è, —Ç.–µ. —Ä–∞–±–æ—Ç–∞—Ç—å –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ
! –ö–æ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ—à—å async/await –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–π try catch

–ü–æ–ª—É—á–∏–ª–∏ 3 –º–∞—Å—Å–∏–≤–∞ —Å –Ω–∞–∑–≤–∞–Ω–∏—è–º–∏ —Å—Ç–æ–ª–∏—Ü
–í –∫–æ–Ω—Å–æ–ª–∏ –≤–∏–¥–Ω–æ, —á—Ç–æ –¥–∞–Ω–Ω—ã–µ –∑–∞–ø—Ä–∞—à–∏–≤–∞—é—Ç—Å—è –ø–æ –æ—á–µ—Ä–µ–¥–∏ –∏ –Ω–∞ —Ç—Ä–∞—Ñ–∏–∫ —Ç—Ä–∞—Ç–∏—Ç—Å—è –ø–æ—Ä—è–¥–∫–∞ 300-500 –º—Å, –ø–æ—á—Ç–∏ –ø–æ–ª—Å–µ–∫—É–Ω–¥—ã –Ω–∞ –∫–∞–∂–¥—ã–π –∑–∞–ø—Ä–æ—Å.
–ù–æ –Ω–∞–º –Ω–µ –Ω—É–∂–Ω–æ, —á—Ç–æ–±—ã –æ–Ω–∏ –≤—ã–ø–æ–ª–Ω—è–ª–∏—Å—å –ø–æ –æ—á–µ—Ä–µ–¥–∏, —ç—Ç–æ –¥–æ–ª–≥–æ
–ê –∫–∞–∫ —Å–¥–µ–ª–∞—Ç—å –∏—Ö –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ?!
–ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥ Promise.All
–ú–µ—Ç–æ–¥ All –≤ –º–∞—Å—Å–∏–≤ –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –∑–∞–ø—Ä–æ—Å—ã, –∫–æ—Ç–æ—Ä—ã–µ –±—É–¥—É—Ç –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è –æ–¥–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–æ. –°–æ–∑–¥–∞–¥–∏–º —ç—Ç–∏ –∑–∞–ø—Ä–æ—Å—ã
–¢–µ–ø–µ—Ä—å –≤—Å–µ –∑–∞–≥—Ä—É–∑–∏–ª–æ—Å—å –≤ –æ–¥–Ω–æ –∏ —Ç–æ –∂–µ –≤—Ä–µ–º—è
*/
async function get3Capital(c1, c2, c3) {
  try {
    // const response1 = await fetch(`https://restcountries.com/v3.1/name/${c1}`);
    // const [data1] = await response1.json();

    // const response2 = await fetch(`https://restcountries.com/v3.1/name/${c2}`);
    // const [data2] = await response2.json();

    // const response3 = await fetch(`https://restcountries.com/v3.1/name/${c3}`);
    // const [data3] = await response3.json();

    const data = await Promise.all([
      fetch(`https://restcountries.com/v3.1/name/${c1}`).then((res) =>
        res.json()
      ),
      fetch(`https://restcountries.com/v3.1/name/${c2}`).then((res) =>
        res.json()
      ),
      fetch(`https://restcountries.com/v3.1/name/${c3}`).then((res) =>
        res.json()
      ),
    ]);
    const dataAll = data.map(function (val) {
      return val[0].capital[0];
    });
    console.log(dataAll);
  } catch (err) {
    console.log(err);
  }
}
get3Capital("belarus", "russia", "turkey");
